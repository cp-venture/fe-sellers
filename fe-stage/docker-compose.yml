# This docker-compose file is used to run the project in Docker for development.
# The local files are mounted into the created container.
#
# Usage:
#  ln -s docker-compose.dev.yml docker-compose.override.yml
#  docker-compose up [-d]
#
# To go back to running the published image:
#  rm docker-compose.override.yml

version: '3.4'

networks:
  reaction:
    external:
      name: reaction.localhost

services:
  web:
    env_file:
      - .env
    image: reactioncommerce/node-dev:12.14.1-v1
    command: "./bin/start"
    networks:
      default:
      reaction:

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fe-stage.entrypoints=http"
      - "traefik.http.routers.fe-stage.rule=Host(`stage.craflo.com`)"
      - "traefik.http.middlewares.fe-stage-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.fe-stage.middlewares=web-https-redirect"
      - "traefik.http.routers.fe-stage-secure.entrypoints=https"
      - "traefik.http.routers.fe-stage-secure.rule=Host(`stage.craflo.com`)"
      - "traefik.http.routers.fe-stage-secure.tls=true"
      - "traefik.http.routers.fe-stage-secure.service=web"
      - "traefik.http.services.fe-stage.loadbalancer.server.port=2300"
      - "traefik.docker.network=web"
      
    volumes:
      - .:/usr/local/src/app
      - web-yarn:/home/node/.cache/yarn
      # Do not link in node_modules from the host
      # This allows IDEs to run lint etc with native add-ons for host OS
      # Without interfering with native add-ons in container
      - empty_node_modules:/usr/local/src/app/node_modules

volumes:
  web-yarn:
  empty_node_modules:
  api_empty_node_modules:
